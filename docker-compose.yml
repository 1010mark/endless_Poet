services:
  proxy:
    image: nginx
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      - /etc/nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/html:/var/www/html
    depends_on:
      - app
      - backend-flask

  certbot:
    image: certbot/certbot:v1.14.0
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/html:/var/www/html

  voicevox_engine:
    image: voicevox/voicevox_engine:cpu-latest
    expose:
      - "50021:50021"
    networks:
      - internal_network
    tty: true
    restart: unless-stopped 

  backend-updater:
    build: 
      context: backend/
      dockerfile: services/updater/Dockerfile
    env_file:
      - .env
    networks:
      - internal_network
    tty: true
    depends_on:
      - redis
      - voicevox_engine

  backend-flask:
    build: 
      context: backend/
      dockerfile: services/flask/Dockerfile
    ports:
      - "5001:5001"
    env_file:
      - .env
    networks:
      - internal_network
    tty: true
    depends_on:
      - backend-updater
  
  redis:
    image: redis
    networks:
      - internal_network

  app:
    build: frontend/
    env_file:
      - .env
    ports:
      - "3000:3000"
    command: ["npm", "run", "start", "--", "-H", "0.0.0.0"]

networks:
  internal_network:
    driver: bridge